require 'spec_helper'

describe "<%= class_name %>#index", js: true, type: :feature do
  let(:user) { create(:<%= singular_name %>_reader_user) }
  let(:index) { "/<%= plural_name %>" }

  before { sign_in user }

  it "presents <%= plural_name.gsub('_', ' ') %>" do
    <%= singular_name %>1 = create :<%= singular_name %>
    <%= singular_name %>2 = create :<%= singular_name %>

    visit index

    expect(page).to have_content(<%= singular_name %>1.name)
    expect(page).to have_content(<%= singular_name %>2.name)
  end

  it "links to details" do
    <%= singular_name %>1 = create :<%= singular_name %>

    visit index
    click_link "<%= singular_name %>_#{<%= singular_name %>1.id}_show"

    expect(page        ).to have_content('Detalhes')
    expect(current_path).to eq "#{index}/#{<%= singular_name %>1.id}"
  end

  <%- attributes.each do |attribute| -%>
  it "filters by <%= attribute.name.gsub('_', ' ') %>" do
    <%- ################################################ -%>
    <%- # TESTING ASSOCIATION FILTER -%>
    <%- if attribute.type == :typeahead -%>
    <%- assoc = association_for(attribute, by: :name) -%>
    <%= assoc.name %>1 = create :<%= assoc.klass.to_s.underscore %>
    <%= assoc.name %>2 = create :<%= assoc.klass.to_s.underscore %>
    <%= singular_name %>1 = create :<%= singular_name %>, <%= assoc.name %>: <%= assoc.name %>1
    <%= singular_name %>2 = create :<%= singular_name %>, <%= assoc.name %>: <%= assoc.name %>2

    visit index
    fill_in_typeahead '<%= i18n_column(attribute) %>', <%= assoc.name %>1.name,
      find('#by_<%= column_name(attribute) %>_wrapper')
    click_button 'Buscar'

    expect(page).to_not have_content(<%= singular_name %>2.name)
    expect(page).to     have_content(<%= singular_name %>1.name)
    <%- ################################################ -%>
    <%- # TESTING SELECT FILTER -%>
    <%- elsif attribute.type == :select -%>
    <%- assoc = association_for(attribute, by: :name) -%>
    <%= assoc.name %>1 = create :<%= assoc.klass.to_s.underscore %>
    <%= assoc.name %>2 = create :<%= assoc.klass.to_s.underscore %>
    <%= singular_name %>1 = create :<%= singular_name %>, <%= assoc.name %>: <%= assoc.name %>1
    <%= singular_name %>2 = create :<%= singular_name %>, <%= assoc.name %>: <%= assoc.name %>2

    visit index
    select <%= assoc.name %>1.name, from: '<%= i18n_column(attribute) %>'
    click_button 'Buscar'

    expect(page).to_not have_content(<%= singular_name %>2.name)
    expect(page).to     have_content(<%= singular_name %>1.name)
    <%- ################################################ -%>
    <%- # TESTING BOOLEAN FILTER -%>
    <%- elsif attribute.type == :boolean -%>
    <%= singular_name %>1 = create :<%= singular_name %>, <%= attribute.name %>: false
    <%= singular_name %>2 = create :<%= singular_name %>, <%= attribute.name %>: true

    visit index
    select '<%= I18n.t(:no) %>', from: '<%= i18n_column(attribute) %>'
    click_button 'Buscar'

    expect(page).to_not have_content(<%= singular_name %>2.name)
    expect(page).to     have_content(<%= singular_name %>1.name)

    select '<%= I18n.t(:yes) %>', from: '<%= i18n_column(attribute) %>'
    click_button 'Buscar'

    expect(page).to_not have_content(<%= singular_name %>1.name)
    expect(page).to     have_content(<%= singular_name %>2.name)
    <%- ################################################ -%>
    <%- # TESTING DATE FILTER -%>
    <%- elsif attribute.type == :date -%>
    <%= singular_name %>1 = create :<%= singular_name %>, <%= attribute.name %>: 1.day.ago
    <%= singular_name %>2 = create :<%= singular_name %>, <%= attribute.name %>: Date.today

    visit index
    fill_in '<%= attribute.name %>_until', with: <%= singular_name %>1.<%= attribute.name %>.strftime('%d/%m/%Y')
    click_button 'Buscar'

    expect(page).to_not have_content(<%= singular_name %>2.name)
    expect(page).to     have_content(<%= singular_name %>1.name)

    fill_in '<%= attribute.name %>_until', with: ''
    fill_in '<%= attribute.name %>_since', with: <%= singular_name %>2.<%= attribute.name %>.strftime('%d/%m/%Y')
    click_button 'Buscar'

    expect(page).to_not have_content(<%= singular_name %>1.name)
    expect(page).to     have_content(<%= singular_name %>2.name)
    <%- ################################################ -%>
    <%- # TESTING CHECKBOXES FILTER -%>
    <%- elsif attribute.type == :checkboxes -%>
    <%- if (assoc = association_for(attribute, by: :name)) -%>
    <%= assoc.name %>1 = create :<%= assoc.klass.to_s.underscore %>
    <%= assoc.name %>2 = create :<%= assoc.klass.to_s.underscore %>
    <%= assoc.name %>3 = create :<%= assoc.klass.to_s.underscore %>
    <%= singular_name %>1 = create :<%= singular_name %>, <%= attribute.name %>: <%= assoc.name %>1
    <%= singular_name %>2 = create :<%= singular_name %>, <%= attribute.name %>: <%= assoc.name %>2
    <%= singular_name %>3 = create :<%= singular_name %>, <%= attribute.name %>: <%= assoc.name %>3

    visit index
    check <%= assoc.name %>1.name
    check <%= assoc.name %>2.name
    click_button 'Buscar'

    expect(page).to_not have_content(<%= singular_name %>3.name)
    expect(page).to     have_content(<%= singular_name %>2.name)
    expect(page).to     have_content(<%= singular_name %>1.name)
    <%- else -%>
    <%= singular_name %>1 = create :<%= singular_name %>, <%= attribute.name %>: 1
    <%= singular_name %>1 = create :<%= singular_name %>, <%= attribute.name %>: 2
    <%= singular_name %>1 = create :<%= singular_name %>, <%= attribute.name %>: 3

    visit index
    check 1
    check 2
    click_button 'Buscar'

    expect(page).to_not have_content(<%= singular_name %>3.name)
    expect(page).to     have_content(<%= singular_name %>2.name)
    expect(page).to     have_content(<%= singular_name %>1.name)
    <%- end -%>
    <%- ################################################ -%>
    <%- # TESTING STRING FILTER -%>
    <%- else -%>
    <%= singular_name %>1 = create :<%= singular_name %>, <%= attribute.name %>: 'ABCD'
    <%= singular_name %>2 = create :<%= singular_name %>, <%= attribute.name %>: 'EFGH'

    visit index
    fill_in '<%= i18n_column(attribute) %>', with: 'bc'
    click_button 'Buscar'

    expect(page).to_not have_content(<%= singular_name %>2.name)
    expect(page).to     have_content(<%= singular_name %>1.name)
    <%- end -%>
    <%- ################################################ -%>
  end
  <%- end -%>
end
